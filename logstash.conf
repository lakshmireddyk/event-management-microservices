input {
  file {
    path => "<YOUR_LOCAL_WORKSPACE_LOCATION>/event-management-microservices/edge-service/edge-service.log"
    start_position => "beginning"
  }
  
  file {
    path => "<YOUR_LOCAL_WORKSPACE_LOCATION>/event-management-microservices/event-service/event-service.log"
    start_position => "beginning"
  }
  
  file {
    path => "<YOUR_LOCAL_WORKSPACE_LOCATION>/event-management-microservices/notification-service/notification-service.log"
    start_position => "beginning"
  }
  
  file {
    path => "<YOUR_LOCAL_WORKSPACE_LOCATION>/event-management-microservices/account-service/account-service.log"
    start_position => "beginning"
  }
  
}

filter{
	
	grok {
    match => [ "message",
               "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})  %{LOGLEVEL:level} \[%{DATA:ml_service},%{DATA:ml_traceId},%{DATA:ml_spanId},%{DATA:ml_zipkin}\] %{NUMBER:pid} --- \[(?<thread>[A-Za-z0-9-]+)\] [A-Za-z0-9.]*\.(?<class>[A-Za-z0-9#_]+)\s*:\s+(?<logmessage>.*)",
               "message",
               "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})  %{LOGLEVEL:level} \[%{DATA:ml_service},%{DATA:ml_traceId},%{DATA:ml_spanId},%{DATA:ml_zipkin}\] %{NUMBER:pid} --- .+? :\s+(?<logmessage>.*)"
             ]
    }
		
}
 
 
output {
   
  # Sending properly parsed log events to elasticsearch
  elasticsearch {
    hosts => ["localhost:9200"]
    index => "microservice-%{+YYYY.MM.dd}"
  }
  stdout {
    codec => rubydebug
  }
}